package io.chalkslate.euler;


import java.time.Instant;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
public class EvenFibonacci {

	public long sumOfEvenValued() {
		long start = Instant.now().toEpochMilli();
		long first = 1;
		long second = 2;
		long sum = 2;
		int lim = 4_000_000;
		while (sum <= lim) {
			long tmp = second;
			second += first;
			first = tmp;
			if((second&1) == 0) {
				sum += second;
			}
		}
		System.err.println("Sum is: "+sum+"\nTime taken : "+ (Instant.now().toEpochMilli()-start));
		return sum;
	}
}
